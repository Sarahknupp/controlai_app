name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest


    strategy:
      matrix:
        node-version: [18.x]

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Backend steps
    - name: Install backend dependencies
      run: npm ci --legacy-peer-deps
      working-directory: ./backend
    
    - name: Run linting
      run: eslint .
      working-directory: ./backend
    
    - name: Run tests
      run: npm test
      working-directory: ./backend
      env:
        CI: true
        NODE_ENV: test
        MONGO_URI: mongodb://localhost:27017/controlai_vendas_test
        JWT_SECRET: test-secret
        REDIS_URL: redis://localhost:6379

    # Frontend steps
    - name: Install frontend dependencies
      run: npm ci --legacy-peer-deps
      working-directory: ./frontend

    - name: Lint frontend
      run: npx eslint .
      working-directory: ./frontend

    - name: Test frontend
      run: npm test
      working-directory: ./frontend
      env:
        CI: true
        NODE_ENV: test

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ github.repository_owner }}/controleai-vendas:latest
